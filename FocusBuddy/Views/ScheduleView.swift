import SwiftUI

struct ScheduleView: View {
    @EnvironmentObject var focusTimer: FocusTimer
    
    var body: some View {
        ScrollView {
            VStack(spacing: 24) {
                // Header
                VStack(spacing: 8) {
                    Text("üìÖ")
                        .font(.system(size: 28))
                    
                    Text("–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                        .font(.title2)
                        .fontWeight(.semibold)
                    
                    Text("–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∂–∏–º–æ–≤ –∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è")
                        .font(.subheadline)
                        .foregroundStyle(.secondary)
                        .multilineTextAlignment(.center)
                }
                .padding(.top, 20)
                
                VStack(spacing: 20) {
                    // Auto-start Settings
                    VStack(alignment: .leading, spacing: 16) {
                        VStack(alignment: .leading, spacing: 4) {
                            Text("‚ö° –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫")
                                .font(.headline)
                                .fontWeight(.semibold)
                            
                            Text("–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –º–µ–∂–¥—É —Ñ–∞–∑–∞–º–∏")
                                .font(.caption)
                                .foregroundStyle(.secondary)
                        }
                        VStack(spacing: 12) {
                            HStack {
                                VStack(alignment: .leading, spacing: 2) {
                                    Text("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø–µ—Ä–µ—Ä—ã–≤–æ–≤")
                                        .font(.subheadline)
                                    Text("–ü–µ—Ä–µ—Ä—ã–≤ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ —Ñ–æ–∫—É—Å-—Å–µ—Å—Å–∏–∏")
                                        .font(.caption2)
                                        .foregroundStyle(.secondary)
                                }
                                
                                Spacer()
                                
                                Toggle("", isOn: $focusTimer.autoStartBreaks)
                                    .toggleStyle(.switch)
                            }
                            
                            Divider()
                            
                            HStack {
                                VStack(alignment: .leading, spacing: 2) {
                                    Text("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ —Ñ–æ–∫—É—Å–∞")
                                        .font(.subheadline)
                                    Text("–§–æ–∫—É—Å-—Å–µ—Å—Å–∏—è –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ä—ã–≤–∞")
                                        .font(.caption2)
                                        .foregroundStyle(.secondary)
                                }
                                
                                Spacer()
                                
                                Toggle("", isOn: $focusTimer.autoStartFocus)
                                    .toggleStyle(.switch)
                            }
                        }
                    }
                    .frame(maxWidth: .infinity, alignment: .leading)
                    .padding(20)
                    .background(.ultraThinMaterial, in: RoundedRectangle(cornerRadius: 16))
                    
                    // Weekly Schedule Preview
                    VStack(alignment: .leading, spacing: 16) {
                        VStack(alignment: .leading, spacing: 4) {
                            Text("üìä –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ")
                                .font(.headline)
                                .fontWeight(.semibold)
                            
                            Text("–ü–ª–∞–Ω–∏—Ä—É–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏")
                                .font(.caption)
                                .foregroundStyle(.secondary)
                        }
                        
                        WeeklySchedulePreview()
                    }
                    .frame(maxWidth: .infinity, alignment: .leading)
                    .padding(20)
                    .background(.ultraThinMaterial, in: RoundedRectangle(cornerRadius: 16))
                }
                .padding(.horizontal, 24)
                
                Spacer(minLength: 20)
            }
        }
        .padding(.horizontal, 16)
    }
}

struct WeeklySchedulePreview: View {
    let days = ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"]
    
    var body: some View {
        VStack(spacing: 12) {
            HStack {
                ForEach(days, id: \.self) { day in
                    VStack(spacing: 6) {
                        Text(day)
                            .font(.caption2)
                            .fontWeight(.medium)
                            .foregroundStyle(.secondary)
                        
                        VStack(spacing: 2) {
                            ForEach(0..<8) { hour in
                                Rectangle()
                                    .fill(scheduleColor(for: day, hour: hour))
                                    .frame(height: 3)
                                    .cornerRadius(1)
                            }
                        }
                    }
                    .frame(maxWidth: .infinity)
                }
            }
            
            HStack(spacing: 16) {
                Label {
                    Text("–§–æ–∫—É—Å")
                        .font(.caption2)
                } icon: {
                    Circle()
                        .fill(.blue)
                        .frame(width: 8, height: 8)
                }
                
                Label {
                    Text("–ü–µ—Ä–µ—Ä—ã–≤")
                        .font(.caption2)
                } icon: {
                    Circle()
                        .fill(.green)
                        .frame(width: 8, height: 8)
                }
                
                Label {
                    Text("–°–≤–æ–±–æ–¥–Ω–æ")
                        .font(.caption2)
                } icon: {
                    Circle()
                        .fill(Color.secondary)
                        .frame(width: 8, height: 8)
                }
                
                Spacer()
            }
            .font(.caption2)
            .foregroundStyle(.secondary)
        }
        .padding(12)
        .background(Color.secondary.opacity(0.3), in: RoundedRectangle(cornerRadius: 8))
    }
    
    private func scheduleColor(for day: String, hour: Int) -> Color {
        // Mock data for preview
        if ["–°–±", "–í—Å"].contains(day) {
            return Color.secondary.opacity(0.3)
        }
        
        switch hour {
        case 0, 1, 6, 7: return Color.secondary.opacity(0.3)
        case 2, 4: return .green.opacity(0.6)
        default: return .blue.opacity(0.8)
        }
    }
}

#Preview {
    ScheduleView()
        .environmentObject(FocusTimer())
        .frame(width: 380, height: 600)
}